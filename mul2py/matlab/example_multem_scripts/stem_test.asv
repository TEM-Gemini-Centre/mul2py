%%
clear all
clc
%% System configuration
gpu = true;

%%%%%%%%%%%%%%%%%%%%% Set system configuration %%%%%%%%%%%%%%%%%%%%%
if gpu
    system_conf.precision = 1;                           % eP_Float = 1, eP_double = 2
    system_conf.device = 2;                              % eD_CPU = 1, eD_GPU = 2
    system_conf.cpu_nthread = 5; 			 % Does the number of CPU threads matter when running on GPU? EXPERIMENT!!
    system_conf.gpu_device = 1;				 % MULTEM can only use one GPU device at the time? Only ask for a single GPU from IDUN, and use this.
else
    system_conf.precision = 1;                           % eP_Float = 1, eP_double = 2
    system_conf.device = 1;                              % eD_CPU = 1, eD_GPU = 2
    system_conf.cpu_nthread = 4; 
    system_conf.gpu_device = 0;
end

%% Load simulation parameters. `MULTEM_input.mat` should contain a struct called `input_multislice` with all relevant simulation parameters given in its fields, including the atomistic model.
clear collection_angles
collection_angles(1).inner_ang = 0; %mrad
collection_angles(1).outer_ang = 40; %mrad
collection_angles(2).inner_ang = 48; %mrad
collection_angles(2).outer_ang = 200; %mrad

convergence_angle = 15; %mrad

input_multislice = STEM_setup("test_model_L_10x10x20.mat", convergence_angle, collection_angles, "nx", 1024, "ny", 1024, "instrument", "ARM200F");
input_multislice.scanning_ns = 3;

%% If you want to adjust scan parameters (default is 10 pixels spanning around the center of the model with a step a/10 in x and b/10 in y.
%input_multislice.scanning_x0 = input_multislice.spec_lx/2 - input_multislice.spec_cryst_a/2;
%input_multislice.scanning_xe = input_multislice.spec_lx/2 + input_multislice.spec_cryst_a/2;

%input_multislice.scanning_y0 = input_multislice.spec_ly/2 - input_multislice.spec_cryst_b/2;
%input_multislice.scanning_ye = input_multislice.spec_ly/2 + input_multislice.spec_cryst_b/2;

%% Store input parameters in results struct
results.input = input_multislice;

%% Run simulation
time_print = 'Started ' + string(datetime('now','TimeZone','local','Format','HH:mm:ss'));
disp(time_print)
clear il_MULTEM;
tic;
output_multislice = il_MULTEM(system_conf, input_multislice); 
toc;

%% Construct results.images
n_t = length(output_multislice.data); %The number of thicknesses
detectors = length(output_multislice.data(1).image_tot); % The number of detectors

results.images = zeros(input_multislice.scanning_ns, input_multislice.scanning_ns, n_t, detectors);

for t = 1:n_t
    for d = 1:detectors
        results.images(:, :, t, d) = transpose(output_multislice.data(t).image_tot(d).image);
    end
end

results.thick = output_multislice.thick;
results.dx = output_multislice.dx;
results.dy = output_multislice.dy;

save("stem_test_results.ecmat", "results", "-v7.3");